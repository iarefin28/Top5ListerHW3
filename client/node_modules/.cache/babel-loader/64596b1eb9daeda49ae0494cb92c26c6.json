{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iaref\\\\Desktop\\\\Top5Lists_HW3\\\\Top5Lists_HW3\\\\client\\\\src\\\\components\\\\Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [draggedTo, setDraggedTo] = useState(0);\n  const [itemEditActive, setItemEditActive] = useState(false);\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"item\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !itemEditActive;\n\n    if (newActive) {\n      store.setIsItemNameEditActive();\n    }\n\n    setItemEditActive(newActive);\n  }\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  let itemStatus = false;\n\n  if (store.isItemNameEditActive) {\n    itemStatus = true;\n  }\n\n  let itemElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    draggable: \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: itemStatus,\n      type: \"button\",\n      id: \"edit-item-\" + index + 1,\n      className: \"list-card-button\",\n      onClick: handleToggleEdit,\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), props.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n\n  if (itemEditActive) {\n    itemElement = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"item-\" + (index + 1),\n      className: itemClass,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n  return itemElement;\n}\n\n_s(Top5Item, \"Z6AvB8VdWTlU9SaDO3Uv4aBNeJw=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["C:/Users/iaref/Desktop/Top5Lists_HW3/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","Top5Item","props","store","draggedTo","setDraggedTo","itemEditActive","setItemEditActive","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetId","substring","indexOf","sourceId","getData","addMoveItemTransaction","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsItemNameEditActive","index","itemClass","itemStatus","isItemNameEditActive","itemElement","text"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction Top5Item(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [draggedTo, setDraggedTo] = useState(0);\r\n    const [itemEditActive, setItemEditActive] = useState(false);\r\n\r\n    function handleDragStart(event) {\r\n        event.dataTransfer.setData(\"item\", event.target.id);\r\n    }\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragEnter(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    function handleDragLeave(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(false);\r\n    }\r\n\r\n    function handleDrop(event) {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        let sourceId = event.dataTransfer.getData(\"item\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n        setDraggedTo(false);\r\n\r\n        // UPDATE THE LIST\r\n        store.addMoveItemTransaction(sourceId, targetId);\r\n    }\r\n\r\n    function handleToggleEdit(event){\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n\r\n    function toggleEdit(){\r\n        let newActive = !itemEditActive;\r\n        if(newActive){\r\n            store.setIsItemNameEditActive();\r\n        }\r\n        setItemEditActive(newActive);\r\n    }\r\n\r\n    let { index } = props;\r\n    let itemClass = \"top5-item\";\r\n    if (draggedTo) {\r\n        itemClass = \"top5-item-dragged-to\";\r\n    }\r\n    let itemStatus = false;\r\n    if(store.isItemNameEditActive){\r\n        itemStatus = true;\r\n    }\r\n    let itemElement = \r\n        <div\r\n            id={'item-' + (index + 1)}\r\n            className={itemClass}\r\n            onDragStart={handleDragStart}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={handleDrop}\r\n            draggable=\"true\"\r\n        >\r\n            <input\r\n                disabled={itemStatus}\r\n                type=\"button\"\r\n                id={\"edit-item-\" + index + 1}\r\n                className=\"list-card-button\"\r\n                onClick={handleToggleEdit}\r\n                value={\"\\u270E\"}\r\n            />\r\n            {props.text}\r\n        </div>;\r\n\r\n    if(itemEditActive){\r\n        itemElement = \r\n            <input \r\n                id={\"item-\" + (index+1)}\r\n                className={itemClass}\r\n                type='text'\r\n            />;\r\n    }\r\n\r\n    return(\r\n        itemElement\r\n    );\r\n}\r\n\r\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}